---
import Item from './NavbarItem.astro'
import LanguageSelector from './NavbarLanguageSelector.astro'

import { getLangFromUrl, useTranslations } from '../../i18n/languagePicker'
import feather from 'feather-icons'

const current_language = getLangFromUrl(Astro.url)
const t = useTranslations(current_language)
---

<style>
	nav {
		font-family: 'Salsa', cursive;
		transition-property: translateY gap;
		transition-duration: 700ms;
	}
	option {
		font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
	}
</style>

<nav
	class="fixed z-50 flex w-full items-center justify-center bg-transparent p-8 pb-0 text-xl backdrop-blur"
>
	<div class="w-full lg:w-2/3">
		<div class="mb-2 flex flex-col sm:flex-row sm:justify-around sm:items-end">
			<div
				class="flex w-full flex-col gap-2 pb-2 sm:w-2/3 sm:flex-row sm:justify-between sm:gap-0 md:w-3/5 xl:w-1/2"
				>
				<Item href="#about-me" name={t('about-me.title')} />
				<hr class=" h-px border-rose-400">
				<Item href="#experience" name={t('experience.title')} />
				<hr class=" h-px border-rose-400">
				<Item href="#contact-me" name={t('contact-me.title')} />
			</div>

			<div
				class="mb-1 mt-5 px-5 md:px-0 flex w-full items-center justify-around gap-0 sm:m-0 sm:w-1/5 sm:items-start sm:justify-end md:w-1/6 lg:w-auto lg:pl-20"
				id="navbar-menu"
			>
				<button class="w-1/2 text-left sm:hidden flex items-center" id="navbar-button">
					<span
						id="navbar-button-icon"
						class="inline-block rotate-180 text-xl transition-all duration-300"
						set:html={feather.icons['chevron-down'].toSvg({class:'text-rose-400'})}
					/>	
				</button>
				<div class="w-1/2 text-right sm:w-auto flex items-center justify-end">
					<LanguageSelector />
				</div>
			</div>
		</div>
		<div class="flex w-full justify-center">
			<hr class="w-full" />
		</div>
	</div>
</nav>

<script>
	import { MOBILE_WIDTH_TRESHOLD } from '../../constants/device_widths'
	let is_navbar_showing = false
	function handleUndefined(): never {
		throw new Error('Element not defined')
	}

	function rotateButton() {
		if (is_navbar_showing) {
			$('#navbar-button-icon').css({
				transform: `rotate(0deg)`,
			})
		} else {
			$('#navbar-button-icon').css({
				transform: `rotate(180deg)`,
			})
		}
	}

	function hideNavbar() {
		const navbar_height = $('nav').outerHeight(true) ?? handleUndefined()
		const button_height =
			$('#navbar-menu').outerHeight(true) ?? handleUndefined()
		const navbar_bottom_margin = parseInt(
			$('nav').css('paddingBottom').replace('px', '')
		)
		const offset_height =
			navbar_height - button_height - navbar_bottom_margin

		$('nav').css({
			top: `-${offset_height}px`,
		})
		is_navbar_showing = false
		rotateButton()
	}

	function showNavbar() {
		$('nav').css({
			top: `0`,
		})
		is_navbar_showing = true
		rotateButton()
	}

	function handleResize() {
		const width = window.screen.width
		const is_mobile = width < MOBILE_WIDTH_TRESHOLD
		if (!is_mobile) {
			showNavbar()
			return
		}

		hideNavbar()
	}

	;(function setup() {
		$('#navbar-button').on('click', () => {
			is_navbar_showing ? hideNavbar() : showNavbar(), rotateButton()
		})
		$('astro-navbar-item').on('click', () => {
			window.screen.width < MOBILE_WIDTH_TRESHOLD ? hideNavbar() : undefined
		})
		rotateButton()

		handleResize()
		$(window).on('resize', handleResize)
	})()

	$('#navbar-languages').on('change', (e) => {
		const current_path = new URL(window.location.href).pathname.split(
			`/`
		)[3]
		const new_language = $(e.target).find(':selected').val()
		window.location.href = `/portfolio/${new_language}/${current_path ? current_path + '/' : ''}`
	})
</script>
