---
interface Props {
    title: string
    startDate: string
    endDate?: string
    skills?: string[]
}

const {title, startDate, endDate = null, skills = []} = Astro.props
---

<style>
    .accordion-body{
        transition: max-height 0.2s ease-out;
        max-height: 0;
    }
</style>

<astro-accordion class="pb-4">
    <div class="mx-2 cursor-pointer">
        <small class="text-sm text-gray-300">
            {startDate} -
            {endDate || "ongoing"}
        </small>
        <div class="flex justify-between gap-4">
            <h2 class="text-xl">{title}</h2>
            <span class="accordion-icon transition-transform">â–²</span>
        </div>
    </div>
    <hr>
    <div class="accordion-body overflow-hidden px-4 rounded-b-sm border-b">
        <div class="my-2">
            <slot />
            {skills.length > 0
                ? (<div class="flex gap-2 my-2 w-full flex-wrap text-sm">
                    {skills.map(skill => (<div class=" px-2 py-1 rounded-full bg-rose-800 text-rose-100">{skill}</div> ))}
                </div>)
                : (<></>)  
            }
        </div>
    </div>
</astro-accordion>

<script>
    class AstroAccordion extends HTMLElement {
        constructor() {
            super()
            const icon = this.getElementsByClassName("accordion-icon")[0] as HTMLElement
            const body = this.getElementsByClassName("accordion-body")[0] as HTMLElement

            this.addEventListener("click", () => {
                if(!this.classList.contains("accordion-active")){
                    for(const accordion of document.getElementsByClassName("accordion-active") as HTMLCollectionOf<HTMLElement>) {
                        accordion.click()
                    }
                }
                this.classList.toggle("accordion-active")
                icon.classList.toggle("rotate-180")
                if(body.style.maxHeight){
                    body.style.maxHeight = ""
                }
                else {
                    body.style.maxHeight = body.scrollHeight + 'px'
                }
            })
        }
    }

    customElements.define('astro-accordion', AstroAccordion)
</script>